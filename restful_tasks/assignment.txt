Restful Task API
Using your new knowledge of 'Restful Routing', create an applicataion with endpoints (routing rules) which offer CRUD operations for 'tasks'. We should be able to use this API for the following commands:

Retrieve all Tasks
Retrieve a Task by ID
Create a Task
Update a Task by ID
Delete a Task by ID
The tasks should be responded in a json format. Consider the tasks being objects with the following properties:

_id: (string) (default id generated by mongoDB)
title: (string)
description: (string, default to empty string)
completed: (boolean, default to: false)
created_at: (date, default to current date)
updated_at: (date, default to current date)
Once your API is complete and your routing rules are in place, and follow the 'restful routing' standards, use the 'postman' browser extension to test your routing rules. 'Postman' is a simple (and quite popular) browser extension that allows you to prepare your own HTTP requests, serving as an ideal tool for testing your server's API.


Retrieve all widgets	'GET' http://company.com/widgets	app.get("/widgets", (req, res) => { 

})
Retrieve 1 widget with the id of 7	'GET' http://company.com/widgets/7	app.get("/widgets/:id", (req, res) => { 

})
Create a widget	'POST' http://company.com/widgets 
(New Widget Object Included)	app.post("/widgets", (req, res) => { 

})
Update 1 widget with the id of 7	'PUT' http://company.com/widgets/7 
(Updated Widget Object Included)	app.put("/widgets/:id", (req, res) => { 

})
Delete 1 widget with the id of 7	'DELETE' http://company.com/widgets/7	app.delete("/widgets/:id", (req, res) => { 

})